namespace rgl {
    // Old functions
    extern(linkname: "glVertex2d") void Vertex2d(double one, double two);
    extern(linkname: "glVertex2f") void Vertex2f(float one, float two);
    extern(linkname: "glVertex2i") void Vertex2i(int one, int two);
    extern(linkname: "glVertex2s") void Vertex2s(short one, short two);

    extern(linkname: "glVertex3d") void Vertex3d(double one, double two, double three);
    extern(linkname: "glVertex3f") void Vertex3f(float one, float two, float three);
    extern(linkname: "glVertex3i") void Vertex3i(int one, int two, int three);
    extern(linkname: "glVertex3s") void Vertex3s(short one, short two, short three);

    extern(linkname: "glVertexAttribPointer") void VertexAttribPointer(uint index, int size, int type, bool normalized, int stride, void* ptr);
    extern(linkname: "glGenBuffers") void GenBuffers(int n, uint* buffers);
    extern(linkname: "glGenerateMipmap") void GenMipMap(int target);
    extern(linkname: "glGenerateTextureMipmap") void GenTextureMipMap(uint texture);

    extern(linkname: "glDeleteBuffers") void DeleteBuffers(int n, uint* buffers);
    extern(linkname: "glBindBuffer") void BindBuffer(int target, uint buffer);

    extern(linkname: "glDrawArrays") void DrawArrays(int mode, int first, int n);
    extern(linkname: "glDrawElements") void DrawElements(int mode, int n, int type, void* indices);

    extern(linkname: "glCreateShader") uint CreateShader(int type);
    extern(linkname: "glCreateProgram") uint CreateProgram();
    extern(linkname: "glDeleteProgram") void DeleteProgram(uint p);
    extern(linkname: "glDeleteShader") void DeleteShader(uint s);

    extern(linkname: "glGetAttribLocation") int GetAttribLoc(uint program, const(char)* name);
    extern(linkname: "glGetShaderiv") void GetShaderiv(uint s, int pn, int* params);
    extern(linkname: "glGetShaderInfoLog") void GetShaderInfoLog(uint s, int bufferSize, int* len, char* buffer);

    extern(linkname: "glDisableVertexAttribArray") void DisableVertexAttribArray(uint index);
    extern(linkname: "glEnableVertexAttribArray") void EnableVertexAttribArray(uint index);

    extern(linkname: "glBufferData") void BufferData(int target, int size, void* data, int usage);
    extern(linkname: "glBindTexture") void BindTexture(int target, uint tex);
    extern(linkname: "glBufferSubData") void BufferSubData(int target, int offset, int size, void* data);
    extern(linkname: "glClearColor") void ClearColor(float r, float g, float b, float a);
    extern(linkname: "glClear") void Clear(int t);
    extern(linkname: "glCompileShader") void CompileShader(uint s);

    extern(linkname: "glLinkProgram") void LinkProgram(uint pr);
    extern(linkname: "glAttachShader") void AttachShader(uint pr, uint s);
    extern(linkname: "glShaderSource") void ShaderSource(uint s, int n, char** str, int* len);
    extern(linkname: "glUseProgram") void UseProgram(uint pr);

    extern(linkname: "glGenVertexArrays") void GenVertexArrays(int n, uint* arrays);
    extern(linkname: "glBindVertexArray") void BindVertexArray(uint arr);
    extern(linkname: "glDeleteVertexArrays") void DeleteVertexArrays(int n, uint* arr);

    extern(linkname: "glTexParameteri") void TexParameterInt(int target, int pn, int param);
    extern(linkname: "glTexImage2D") void TexImage2D(int target, int l, int internalf, int w, int h, int b, int form, int t, void* pix);

    extern(linkname: "glUniform1f") void Uniform1Float(int loc, float v);
    extern(linkname: "glUniform1i") void Uniform1Int(int loc, int v);
    extern(linkname: "glUniform2f") void Uniform2Float(int loc, float v);
    extern(linkname: "glUniform2i") void Uniform2Int(int loc, int v);
    extern(linkname: "glUniform3f") void Uniform3Float(int loc, float v);
    extern(linkname: "glUniform3i") void Uniform3Int(int loc, int v);
    extern(linkname: "glUniform4f") void Uniform4Float(int loc, float v);
    extern(linkname: "glUniform4i") void Uniform4Int(int loc, int v);
    extern(linkname: "glUniformMatrix2fv") void UniformMatrix2fv(int l, int n, bool transp, float* vals);
    extern(linkname: "glUniformMatrix3fv") void UniformMatrix3fv(int l, int n, bool transp, float* vals);
    extern(linkname: "glUniformMatrix4fv") void UniformMatrix4fv(int l, int n, bool transp, float* vals);

    extern(linkname: "glVertexAttrib1f") void VertexAttrib1(int index, float v);
    extern(linkname: "glVertexAttrib2f") void VertexAttrib2(int index, float v, float v2);
    extern(linkname: "glVertexAttrib3f") void VertexAttrib3(int index, float v, float v2, float v3);
    extern(linkname: "glVertexAttrib4f") void VertexAttrib4(int index, float v, float v2, float v3, float v4);

    extern(linkname: "glViewport") void ViewPort(int w, int h, int x, int y);
    extern(linkname: "glGetProgramiv") void GetProgramiv(uint id, int t, int* s);
    extern(linkname: "glGetProgramInfoLog") void GetProgramInfoLog(uint id, int c, int* l, char* buffer);

    extern(linkname: "glGenTextures") void GenTextures(int n, uint* where);
    extern(linkname: "glActiveTexture") void ActiveTexture(int n);
}